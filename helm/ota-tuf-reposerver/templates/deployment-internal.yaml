---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ota-tuf-reposerver.fullname" . }}-internal
  labels:
    app: {{ template "ota-tuf-reposerver.name" . }}-internal
    chart: {{ template "ota-tuf-reposerver.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ota-tuf-reposerver.name" . }}-internal
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ota-tuf-reposerver.name" . }}-internal
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: {{ .Values.prometheus.scrape | quote }}
        prometheus.io/port: {{ .Values.prometheus.port | quote }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
    {{- if .Values.registryPullSecret }}
      imagePullSecrets:
      - name: {{ .Values.registryPullSecret }}
    {{- end }}
      initContainers:
      - name: {{ .Chart.Name }}-init
        image: "{{ .Values.image.init_image }}"
        command: ["sh", "-c", "chown --recursive 2:2 {{ .Values.configMap.LOCAL_STORAGE_ROOT }}"]
        volumeMounts:
        - name: data
          mountPath: {{ .Values.configMap.LOCAL_STORAGE_ROOT }}
      terminationGracePeriodSeconds: {{ .Values.lifecycle.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}-internal
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "{{ .Values.lifecycle.preStopTimeSec }}"]
          envFrom:
          - configMapRef:
              name: {{ template "ota-tuf-reposerver.fullname" . }}
          - secretRef:
              name: {{ template "ota-tuf-reposerver.fullname" . }}
          env:
          - name: 'AUTH_PROTOCOL'
            value: 'none'
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.configMap.BIND_PORT }}
              name: http
          livenessProbe:
            initialDelaySeconds: 300
            periodSeconds: 30
            httpGet:
              path: "/health"
              port: {{ .Values.configMap.BIND_PORT }}
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: 10
            httpGet:
              path: "/health"
              port: {{ .Values.configMap.BIND_PORT }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
          - name: data
            mountPath: {{ .Values.configMap.LOCAL_STORAGE_ROOT }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "ota-tuf-reposerver.fullname" . }}
      {{- else if .Values.persistence.azureFile }}
        azureFile:
          secretName: ota-share
          shareName: ota-share
          readOnly: false
      {{- else if .Values.persistence.azureDisk }}
        azureDisk:
          kind: Managed
          diskName: ota-disk
          diskURI: {{ .Values.persistence.azureDiskUri }}
      {{- else }}
        emptyDir: {}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
