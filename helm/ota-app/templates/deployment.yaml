---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "ota-app.fullname" . }}
  labels:
    app: {{ template "ota-app.name" . }}
    chart: {{ template "ota-app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ota-app.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ota-app.name" . }}
        release: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
    {{- if .Values.registryPullSecret }}
      imagePullSecrets:
      - name: {{ .Values.registryPullSecret }}
    {{- end }}
      terminationGracePeriodSeconds: {{ .Values.lifecycle.terminationGracePeriodSeconds }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          - name: JWT_SECRET
            valueFrom:
              secretKeyRef:
                name: jwt-signing-key
                key: jwt-signing-key
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "{{ .Values.lifecycle.preStopTimeSec }}"]
          envFrom:
          - configMapRef:
              name: {{ template "ota-app.fullname" . }}
          - secretRef:
              name: {{ template "ota-app.fullname" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - containerPort: {{ .Values.service.internalPort }}
          args:
          - "-Dhttp.port={{ .Values.service.internalPort }}"
          - "-Dwebsrc.atsgarage={{ .Values.configMap.WS_SCHEME }}://{{ .Values.configMap.WS_HOST }}:{{ .Values.configMap.WS_PORT }}"
          resources:
{{ toYaml .Values.resources | indent 12 }}
          livenessProbe:
            initialDelaySeconds: 90
            periodSeconds: 30
            httpGet:
              port: {{ .Values.service.internalPort }}
              path: "/health"
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
