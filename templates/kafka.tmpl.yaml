---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-config
data:
  server.properties: |
    advertised.host.name=0.0.0.0
    advertised.port=9092
    auto.create.topics.enable=true
    broker.id=0
    group.initial.rebalance.delay.ms=0
    listeners=PLAINTEXT://:9092
    log.dirs=/var/lib/kafka/data/topics
    log.retention.check.interval.ms=300000
    log.retention.hours=-1
    log.segment.bytes=1073741824
    num.io.threads=8
    num.network.threads=3
    num.partitions=1
    num.recovery.threads.per.data.dir=1
    offsets.topic.replication.factor=1
    socket.receive.buffer.bytes=102400
    socket.request.max.bytes=104857600
    socket.send.buffer.bytes=102400
    transaction.state.log.min.isr=1
    transaction.state.log.replication.factor=1
    zookeeper.connect={{ .zookeeperHost }}:2181
    zookeeper.connection.timeout.ms=6000
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-env
data:
  KAFKA_HOME: "/usr/share/apache-kafka"
---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: kafka
spec:
  serviceName: kafka
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: {{ .kafkaImage }}
        command:
          - /usr/share/apache-kafka/bin/kafka-server-start.sh
          - /usr/share/apache-kafka/config/server.properties
        envFrom:
        - configMapRef:
            name: kafka-env
        resources:
          requests:
            cpu: {{ .kafkaCpu }}
            memory: {{ .kafkaMemory }}
        ports:
        - containerPort: 9092
          name: kafka
        volumeMounts:
        - name: config
          mountPath: /usr/share/apache-kafka/config/server.properties
          subPath: server.properties
        - name: data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: config
        configMap:
          name: kafka-config
          items:
          - key: server.properties
            path: server.properties
      - name: data
        persistentVolumeClaim:
          claimName: kafka-pv-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: kafka-pv-1
  labels:
    type: local
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /data/kafka-pv-1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pv-claim
  labels:
    app: kafka
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka
spec:
  ports:
  - port: 9092
    name: kafka
  selector:
    app: kafka
