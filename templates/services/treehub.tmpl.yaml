---
apiVersion: v1
kind: ConfigMap
metadata:
  name: treehub-config
data:
  AUTH_PROTOCOL: none
  BIND_HOST: 0.0.0.0
  BIND_PORT: '9001'
  DB_MIGRATE: 'true'
  DB_URL: jdbc:mariadb://{{ .mysql_host }}:3306/treehub
  DB_USER: {{ .treehub_db_user }}
  DEVICE_REGISTRY_HOST: device-registry
  DEVICE_REGISTRY_PORT: '80'
  JAVA_OPTS: {{ .treehub_java_opts }}
  REPORT_METRICS: "false"
  SOTA_CORE_HOST: sota-core
  SOTA_CORE_PORT: '80'
  TREEHUB_HOSTNAME: http://treehub.{{ .ingress_dns_name }}/api/v2/mydevice
  TREEHUB_LOCAL_STORE_PATH: "/treehub-objects"
  TREEHUB_STORAGE: local
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: treehub
spec:
  serviceName: treehub
  replicas: 1
  selector:
    matchLabels:
      app: treehub
  template:
    metadata:
      labels:
        app: treehub
    spec:
      {{- if eq .treehub_storage "local"}}
      initContainers:
      - name: treehub-init
        image: {{ .init_docker_image }}
        command: ["sh", "-c", "chown --recursive 2:2 /treehub-objects"]
        volumeMounts:
        - name: infra-vol
          mountPath: /treehub-objects
      {{- end}}
      containers:
      - image: {{ .treehub_docker_image }}
        name: treehub
        envFrom:
        - configMapRef:
            name: kafka-shared
        - configMapRef:
            name: treehub-config
        - secretRef:
            name: treehub-secret
        ports:
        - containerPort: 9001
        resources:
          requests:
            cpu: {{ .treehub_cpu }}
            memory: {{ .treehub_mem }}
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 30
          httpGet:
            port: 9001
            path: "/health"
      {{- if eq .treehub_storage "local"}}
        volumeMounts:
        - name: infra-vol
          mountPath: /treehub-objects
          subPath: treehub-objects
      {{- end}}

  volumeClaimTemplates:
  - metadata:
      name: infra-vol
      {{- if .storage_class_name}}
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .storage_class_name }}
      {{- end}}
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{ .treehub_disk }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: treehub
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/limit-whitelist: {{.ingress_acl_whitelist}}
    nginx.ingress.kubernetes.io/proxy-body-size: {{.ingress_proxy_size}}
spec:
  rules:
  - host: treehub.{{ .ingress_dns_name }}
    http:
      paths:
      - backend:
          serviceName: treehub
          servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: treehub-secret
type: Opaque
data:
  DB_PASSWORD: {{ .treehub_db_password | b64enc }}
  {{- if eq .treehub_storage "s3"}}
  TREEHUB_AWS_ACCESS_KEY: {{.treehub_aws_key | b64enc}}
  TREEHUB_AWS_SECRET_KEY: {{.treehub_aws_secret | b64enc}}
  {{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: treehub
spec:
  ports:
  - port: 80
    targetPort: 9001
  selector:
    app: treehub
