---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  AUTH_PROTOCOL: none
  AUTH_VERIFICATION: local
  BIND_HOST: 0.0.0.1
  BIND_PORT: '9001'
  CAMPAIGNER_HOST: campaigner
  CAMPAIGNER_PORT: '80'
  CRYPT_CREATE_ACCOUNTS: "false"
  DEVICE_GATEWAY_PORT: '8000'
  DEVICE_REGISTRY_HOST: device-registry
  DEVICE_REGISTRY_PORT: '80'
  DIRECTOR_HOST: director
  DIRECTOR_PORT: '80'
  ENV_PREFIX: {{ .env_prefix }}
  JAVA_OPTS: {{ .app_java_opts }}
  KAFKA_HOST: {{ .kafka_host }}:9092
  KAFKA_TOPIC_SUFFIX: {{ .kafka_topic_suffix }}
  KAFKA_BOOTSTRAP_SERVERS: {{ .kafka_host }}:9092
  MESSAGING_MODE: kafka
  OIDC_LOGIN_ACTION: com.advancedtelematic.auth.garage.NoLoginAction
  OIDC_LOGOUT_ACTION: com.advancedtelematic.auth.garage.NoLogoutAction
  OIDC_NS_PROVIDER: com.advancedtelematic.auth.oidc.ConfiguredNamespace
  OIDC_TOKEN_EXCHANGE: com.advancedtelematic.auth.NoExchange
  OIDC_TOKEN_VERIFICATION: com.advancedtelematic.auth.oidc.TokenValidityCheck
  PACKAGES_VERSION_FORMAT: ".+"
  PLAY_HTTP_SESSION_SECURE: 'false'
  REPORT_METRICS: "false"
  SOTA_CORE_HOST: sota-core
  SOTA_CORE_PORT: '80'
  TOGGLE_ATS_GARAGE_THEME: "false"
  TOGGLE_AUTO_FEATURE_ACTIVATION: "false"
  TOGGLE_CREDENTIALS_DOWNLOAD: "false"
  TOGGLE_PREBUILT_DEBRPM: "false"
  TOGGLE_USER_PROFILE_MENU: "false"
  TUF_REPOSERVER_HOST: tuf-reposerver
  TUF_REPOSERVER_PORT: '80'
  WS_HOST: web-events.{{ .ingress_dns_name }}
  WS_PORT: '80'
  WS_SCHEME: ws
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: app
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: {{ .app_docker_image }}
        name: app
        envFrom:
        - configMapRef:
            name: app-config
        - secretRef:
            name: app-secret
        imagePullPolicy: Always
        ports:
        - containerPort: 9001
        args:
        - "-Dhttp.port=9001"
        - "-Dwebsrc.atsgarage=ws://*.{{ .ingress_dns_name }}:80"
        resources:
          requests:
            cpu: {{ .app_cpu }}
            memory: {{ .app_mem }}
        livenessProbe:
          initialDelaySeconds: 10
          periodSeconds: 30
          httpGet:
            port: 9001
            path: "/health"
      imagePullSecrets:
      - name: docker-registry-key
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: app
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: app.{{ .ingress_dns_name }}
    http:
      paths:
      - backend:
          serviceName: app
          servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secret
type: Opaque
data:
  JWT_SECRET: {{ .app_jwt_secret | b64enc }}
  PLAY_CRYPTO_SECRET: {{ .app_play_crypto_secret | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: app
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 9001
  selector:
    app: app
