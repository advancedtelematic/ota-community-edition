---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tuf-vault-config
data:
  DEFAULT_LEASE_TTL: 30s
  KAFKA_HOST: {{ .kafkaHost }}:9092
  KAFKA_BOOTSTRAP_SERVERS: {{ .kafkaHost }}:9092
  MAX_LEASE_TTL: 30s
  MYSQL_ADDR: {{ .mysqlHost }}:3306
  MYSQL_DATABASE: tuf_vault
  MYSQL_DATABASE_TABLE: tuf_vault
  MYSQL_USERNAME: tuf_vault
  REPORT_METRICS: "false"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tuf-vault
spec:
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: tuf-vault
    spec:
      containers:
      - image: {{ .tufVaultImage }}
        name: tuf-vault
        envFrom:
        - configMapRef:
            name: tuf-vault-config
        - secretRef:
            name: tuf-vault-secret
        imagePullPolicy: Always
        ports:
        - containerPort: 8200
          name: tuf-vault0
        args:
        resources:
          requests:
            cpu: {{ .tufVaultCpu }}
            memory: {{ .tufVaultMemory }}
        livenessProbe:
          initialDelaySeconds: 300
          periodSeconds: 30
          tcpSocket:
            port: 8200
        securityContext:
          capabilities:
            add:
            - IPC_LOCK
      imagePullSecrets:
      - name: atsk8sregistrykey
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: tuf-vault
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: tuf-vault.{{ .externalDomain }}
    http:
      paths:
      - backend:
          serviceName: tuf-vault
          servicePort: 80
---
apiVersion: v1
kind: Secret
metadata:
  name: tuf-vault-secret
type: Opaque
data:
  MYSQL_PASSWORD: {{ .tufVaultMysqlPassword | b64enc }}
---
apiVersion: v1
kind: Service
metadata:
  name: tuf-vault
spec:
  ports:
  - port: 80
    targetPort: 8200
    protocol: TCP
    name: tuf-vault0
  selector:
    app: tuf-vault
